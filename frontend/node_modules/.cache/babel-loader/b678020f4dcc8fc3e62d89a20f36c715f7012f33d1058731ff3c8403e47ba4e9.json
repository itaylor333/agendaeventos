{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\taylor\\\\Documents\\\\agendaeventos\\\\frontend\\\\src\\\\pages\\\\AdminPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport EventForm from '../components/EventForm';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPanel = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const fetchEvents = async () => {\n    try {\n      const res = await api.get('/events');\n      setEvents(res.data);\n    } catch (error) {\n      console.error('Erro ao buscar eventos:', error);\n    }\n  };\n  useEffect(() => {\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Painel Administrativo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventForm, {\n      onSuccess: fetchEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Eventos Cadastrados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), events.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Nenhum evento cadastrado.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [event.title, \" - \", new Date(event.date).toLocaleString()]\n      }, event._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPanel, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useEffect","EventForm","api","jsxDEV","_jsxDEV","AdminPanel","_s","events","setEvents","fetchEvents","res","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","length","map","event","title","Date","date","toLocaleString","_id","_c","$RefreshReg$"],"sources":["C:/Users/taylor/Documents/agendaeventos/frontend/src/pages/AdminPanel.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport EventForm from '../components/EventForm';\r\nimport api from '../services/api';\r\n\r\nconst AdminPanel = () => {\r\n  const [events, setEvents] = useState([]);\r\n\r\n  const fetchEvents = async () => {\r\n    try {\r\n      const res = await api.get('/events');\r\n      setEvents(res.data);\r\n    } catch (error) {\r\n      console.error('Erro ao buscar eventos:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchEvents();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"admin-panel\">\r\n      <h2>Painel Administrativo</h2>\r\n\r\n      <EventForm onSuccess={fetchEvents} />\r\n\r\n      <hr />\r\n\r\n      <h3>Eventos Cadastrados</h3>\r\n      {events.length === 0 ? (\r\n        <p>Nenhum evento cadastrado.</p>\r\n      ) : (\r\n        <ul>\r\n          {events.map(event => (\r\n            <li key={event._id}>\r\n              {event.title} - {new Date(event.date).toLocaleString()}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMR,GAAG,CAACS,GAAG,CAAC,SAAS,CAAC;MACpCH,SAAS,CAACE,GAAG,CAACE,IAAI,CAAC;IACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAEDb,SAAS,CAAC,MAAM;IACdS,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKW,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BZ,OAAA;MAAAY,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE9BhB,OAAA,CAACH,SAAS;MAACoB,SAAS,EAAEZ;IAAY;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAErChB,OAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAENhB,OAAA;MAAAY,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3Bb,MAAM,CAACe,MAAM,KAAK,CAAC,gBAClBlB,OAAA;MAAAY,QAAA,EAAG;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEhChB,OAAA;MAAAY,QAAA,EACGT,MAAM,CAACgB,GAAG,CAACC,KAAK,iBACfpB,OAAA;QAAAY,QAAA,GACGQ,KAAK,CAACC,KAAK,EAAC,KAAG,EAAC,IAAIC,IAAI,CAACF,KAAK,CAACG,IAAI,CAAC,CAACC,cAAc,CAAC,CAAC;MAAA,GAD/CJ,KAAK,CAACK,GAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEd,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACd,EAAA,CAtCID,UAAU;AAAAyB,EAAA,GAAVzB,UAAU;AAwChB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}